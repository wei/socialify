name: Docker

on:
  workflow_dispatch:
  push:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
            qemu: ''
          - arch: arm64
            platform: linux/arm64
            qemu: arm64
          - arch: armv7
            platform: linux/arm/v7
            qemu: arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-${{ matrix.arch }}

      - name: Set up QEMU
        if: matrix.qemu != ''
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.qemu }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Create multi-arch manifest
        run: |
          for tag in ${{ steps.meta.outputs.tags }}; do
            docker buildx imagetools create -t "$tag" \
              "$tag-amd64" "$tag-arm64" "$tag-armv7"
          done

      - name: Get manifest digest
        id: inspect
        run: |
          tag=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          digest=$(docker buildx imagetools inspect "$tag" | awk '/Digest:/ {print $2}')
          echo "digest=$digest" >> "$GITHUB_OUTPUT"

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.inspect.outputs.digest }}
          push-to-registry: true

